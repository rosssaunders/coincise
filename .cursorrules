# Coincise Projects Rules

## Project Structure

Each extraction project must follow this directory structure:

```
project-name/
├── config/ # JSON based config files
├── src/ # All source code goes here
│   ├── index.js           # Main Entry point
├── package.json
├── package-lock.json
└── README.md
```

## Extraction Script Readability

- Write each extraction script so that any human can easily read and understand it.
- Make scripts simple to change and adapt quickly, even if this means the code is less organized or structured.

## Dependencies

Required dependencies for all extraction projects:

- turndown: ^7.1.2
- turndown-plugin-gfm: ^1.0.2

Optional dependencies must be justified in the project's README.md.

## JavaScript Standards

- Use pure ES6 JavaScript only
- No TypeScript or other transpiled languages
- All files must use `.js` extension
- Use ES6 modules (`import`/`export`)
- Enable strict mode in all files
- Use async/await for asynchronous operations
- Follow ES6 class syntax for object-oriented code
- Use arrow functions where appropriate
- Use template literals for string interpolation
- Use destructuring and spread operators
- Use const/let instead of var

## Code Style

- Use 2 spaces for indentation
- Use semicolons
- Maximum line length: 100 characters
- Use single quotes for strings
- Use camelCase for variables and functions
- Use PascalCase for classes
- Use UPPER_SNAKE_CASE for constants

## Package.json Scripts

- All extraction scripts must be executed through package.json scripts
- Scripts that take parameters must use the prefix `extract:` followed by the parameter name
- Example: `"extract:config": "node src/index.js"`

## Github Workflows

- Each venue has a separate workflow file for automatically updating the documentation and raising a PR if anything has changed
- The workflow should run weekly at midnight on Saturday night / Sunday morning
- Workflows must execute the extraction scripts using the package.json scripts
- Example workflow command: `npm run extract:config`
