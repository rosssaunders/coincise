!function(){try{var e="undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof self?self:{},r=(new e.Error).stack;r&&(e._sentryDebugIds=e._sentryDebugIds||{},e._sentryDebugIds[r]="480ac5d1-38cb-4228-9f3e-3cbc9e18e3ea",e._sentryDebugIdIdentifier="sentry-dbid-480ac5d1-38cb-4228-9f3e-3cbc9e18e3ea")}catch(e){}}();"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[7815],{71233:function(e,r,t){t.d(r,{G:function(){return f}});var n=t(74512),a=t(32735),o=t(35837),i=t(41600),c=t(33708),s=t(23424);function d(e){let{show:r,href:t,cta:o,title:i,description:c}=e;return(0,n.jsx)("div",{"aria-live":"assertive",className:"tablet:p-6 pointer-events-none fixed inset-0 z-20 flex items-end px-4 py-6",children:(0,n.jsx)("div",{className:"tablet:items-end flex w-full flex-col items-center space-y-4",children:(0,n.jsx)(s.u,{show:r,as:a.Fragment,enter:"transform ease-out duration-300 transition",enterFrom:"translate-y-2 opacity-0 tablet:translate-y-0 tablet:translate-x-2",enterTo:"translate-y-0 opacity-100 tablet:translate-x-0",leave:"transition ease-in duration-100",leaveFrom:"opacity-100",leaveTo:"opacity-0",children:(0,n.jsxs)("div",{className:"pointer-events-auto flex flex-col space-y-1 rounded-lg bg-white px-8 py-4 shadow-lg ring-1 ring-black ring-opacity-5",children:[(0,n.jsx)("p",{className:"text-sm font-medium text-gray-900",children:i}),(0,n.jsx)("p",{className:"whitespace-pre-line text-sm text-gray-500",children:c}),(0,n.jsx)("div",{className:"w-fit",children:(0,n.jsx)("a",{href:t,children:o})})]})})})})}var u=t(53097),p=t(67250);let l=()=>{let e=(0,p.useTranslations)();return(0,a.useMemo)(()=>Object.values(i.zu).reduce((r,t)=>(r[t]=e.raw(t),r),{}),[e])};function f(e){let{documentUpdatedAt:r,getUpToDateKeys:t,upToDateKeysCondition:s=!1,children:p}=e,{locale:f,asPath:h}=(0,o.useRouter)(),y=(0,a.useMemo)(()=>(0,i._P)(f).app,[f]),g=(0,u.uL)(),b=(0,a.useMemo)(()=>g?(0,n.jsx)("div",{children:(0,n.jsx)(d,{show:g,href:"".concat("/hc","/api/exit-preview?slug=").concat(h),cta:"Deactivate",title:"Live Preview Activated",description:"You see real-time Sanity changes.\nSwitching locale will fetch live translations."})}):null,[h,g]),m=(0,a.useMemo)(()=>(0,n.jsxs)(n.Fragment,{children:[p,b]}),[p,b]),w=y===i.Nq,S=l();if(g&&(w||s)){let e={...S,...t()};return(0,n.jsx)(c.t,{messages:e,children:m},r)}return m}},53433:function(e,r,t){t.d(r,{G:function(){return d},f:function(){return u}});var n=t(95492),a=t.n(n),o=t(41600),i=t(69771),c=t(56906),s=t(87867);async function d(e){var r;let{sharedTranslations:t,nextJsLocale:n,sharedProps:d,modals:p,context:l}=e,{appsSection:f,config:h}=d,y=u(n),g=(0,o.tZ)(t.messages),b={...a()(g,(e,r)=>r.includes("needHelpContent")),"searchBar-needHelpContent":(0,i.ioi)(t.messages.searchBar.needHelpContent)};!function(e){let r=Object.keys(e),t=new Set(Object.values(o.zu));r.length===t.size&&r.every(e=>t.has(e))||console.error("Shared UI translation keys fetched from Sanity need to be exactly the same as values in the `SharedUI` enum")}(b);let m={...(0,i.xw1)(p.DLT)},w=(0,i.SWm)(f),S=(0,i.uXo)(null==h?void 0:null===(r=h[0])||void 0===r?void 0:r.recommendedSearches),k={...b,...w,...S,...m},E=y?await (0,c.W4)(n,k):void 0;return(0,s.z8)({messages:E,defaultMessages:k})}function u(e){return e!==o.tz&&e!==o.Nq}},65236:function(e,r,t){t.d(r,{We:function(){return o},zP:function(){return i},Jl:function(){return a},ob:function(){return n}});let n="max-w-[1252px]",a="max-w-[828px]",o="max-w-[722px]",i="max-w-[640px]";t(96348)},87867:function(e,r,t){function n(e){let{messages:r,defaultMessages:t}=e;return{...t,...Object.entries(null!=r?r:{}).reduce((e,r)=>{let[t,n]=r;return n&&(e[t]=n),e},{})}}t.d(r,{z8:function(){return n},s_:function(){return a},Gn:function(){return s}});let a=e=>!!e.props;var o=t(41600),i=t(7391),c=t(33530);function s(e){let{route:r,nextJsLocale:t,enabledLocales:n,routesRedirect:a,skipValidation:s,detectedCountry:d}=e,u="default"===t?o.Nq:null!=t?t:o.Nq,p=n.map(e=>(0,o.aU)(e).app);if(!(s||t===o.tz||p.includes(u)))return{redirect:{destination:"/".concat(o.Nq).concat(null!=r?r:""),permanent:!0}};if(!r)return null;let l=function(e){let{route:r,locale:t,sanityRoutes:n}=e;return n.find(e=>{let{path:n,path_type:a,all_locales:o}=e;if("comma-separated"===a){var i;return null==n?void 0:null===(i=n.split(","))||void 0===i?void 0:i.find(e=>new RegExp("^".concat(e.replace(/\*/g,"(.*)"),"$")).test(r))}let c=o?r:"".concat(t,"/").concat(r);return RegExp("^".concat(n,"$"),"i").test(c)})}({route:decodeURI(r.replace(/\?.*/,"")),locale:u,sanityRoutes:a});return l&&function(e){let{route:r,locale:t,sanityRedirection:n,detectedCountry:a}=e,{path:s,all_locales:d}=n,u=[];for(let e of n.rules){let n=function(e){let{all_locales:r,path:t,destination:n,route:a,locale:i}=e,c=n.replace(/\$hostname/g,"https://support.kraken.com");r&&(c=c.replace(/\$locale/g,i));let s=t.indexOf(".*"),d=c.indexOf("$matchAllPath");if(d>=0&&s>=0){let e=c.slice(0,d);c="".concat(e).concat(a.slice(s))}return!(c.startsWith("/")&&o.k1.find(e=>c.includes(e.app)))&&i&&(c="/".concat(i).concat(c)),c}({locale:t,route:r,all_locales:d,path:s,destination:e.destination}),p=(0,i.Z6)(r,n,t);if("urlChangeRule"===e._type||"geoRule"===e._type&&(0,c.V)({countries:e.countries,country:a,type:e.type}))return{redirect:{destination:p,permanent:e.permanent}};"signInRule"===e._type&&u.push({countries:e.countries,destination:p,detectedCountry:a,fallback:e.fallback,modal:e.redirectModal,type:e.type})}return u.length>0?u:void 0}({route:r,locale:u,sanityRedirection:l,detectedCountry:d})||null}},56906:function(e,r,t){t.d(r,{W4:function(){return D}});var n=t(43653),a=t.n(n),o=t(41600),i=t(93280),c=t(13158);function s(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{localTweaks:!1},r=function(e){let{localTweaks:r}=e;return r instanceof Object&&"tweakEnvInLocal"in r?"prod"===r.projectToWorkWith?c.env.SCRIPT_PHRASE_PROJECT_ID_PROD:c.env.SCRIPT_PHRASE_PROJECT_ID_DEV:c.env.PHRASE_PROJECT_ID}(e),t=["token ".concat(c.env.PHRASE_API_KEY),"token ".concat(c.env.PHRASE_API_KEY_TWO),"token ".concat(c.env.PHRASE_API_KEY_THREE),"token ".concat(c.env.PHRASE_API_KEY_FOUR)],n=Math.floor(Math.random()*t.length),a=t[n];return(0,i.h)(r,"Trying to initialise phrase api without project Id. Please review env files."),(0,i.h)(a,"Trying to initialise phrase api without api key. Please review env files."),{apiUrl:"".concat("https://api.phrase.com/api/v2","/projects/").concat(r),apiKey:a}}async function d(e){let{apiUrl:r,apiKey:t}=e?s({localTweaks:{projectToWorkWith:e,tweakEnvInLocal:!0}}):s(),{data:n}=await a().get("".concat(r,"/locales"),{headers:{Authorization:t}}),i=n.filter(e=>{let{code:r}=e;return o.lv.includes(r)}),c=new Map;return i.forEach(e=>c.set(e.code,e.id)),c}async function u(e,r){let t=(0,o._P)(e);return(await d(r)).get(t.official)}async function p(e){let{apiUrl:r,apiKey:t}=s(),{data:n}=await a().get("".concat(r,"/uploads/").concat(e),{headers:{Authorization:t}});return"success"===n.state&&console.log(JSON.stringify(n.summary)),n.state}async function l(e){let r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:o.Nq,t=e.join(",").replace(/ /g,"\\ "),{apiUrl:n,apiKey:i}=s(),c=Math.ceil(e.length/100),d=[],p=await u(r);if(!p)return[];for(let e=0;e<c;e++){let{data:r}=await a().post("".concat(n,"/keys/search"),{q:"name:".concat(t),locale_id:p},{params:{page:e+1,per_page:100},headers:{Authorization:i,"Content-Type":"application/json"}});d.push(...r)}return!function(e,r){let t=[e,r.map(e=>e.name)].reduce((e,r)=>e.filter(e=>!r.includes(e)));t.length>0&&(console.log(""),console.log("Keep in mind these keys found in the source code (CMS articles)\nare not pushed yet to phrase, so the job will NOT have them:"),t.forEach(e=>console.log("	".concat(e))),console.log(""))}(e,d),d}async function f(e){return(await l(e)).map(e=>e.id||"").filter(e=>!!e)}async function h(e){let{phraseJob:r,keys:t}=e,{apiKey:n,apiUrl:o}=s(),i=Object.keys(t),c=await f(i),{data:d}=await a().post("".concat(o,"/jobs/").concat(r,"/keys"),{translation_key_ids:c},{headers:{Authorization:n,"Content-Type":"application/json"}}),{id:u}=d;return u}var y=t(32295);async function g(){let{useCache:e}=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{useCache:!0},r=e?9e5:0,{apiUrl:t,apiKey:n}=s(),o=[];for(let e=0;e<1e3;e++){let{data:i}=await new y.S({defaultOptions:{queries:{staleTime:r}}}).fetchQuery({queryKey:[t,e],queryFn:async()=>await a().get("".concat(t,"/jobs"),{headers:{Authorization:n,"Content-Type":"application/json"},params:{page:e+1,per_page:100}})});if(o.push(...i),i.length<100)break}return o}async function b(e){let r=(await g()).find(r=>r.name===e);return r?r.id:void 0}async function m(e){let{name:r,description:t,keys:n,phraseJob:o}=e,i=o||await b(r);if(i)return h({phraseJob:i,keys:n});let{apiKey:c,apiUrl:d}=s(),u=Object.keys(n),p=await f(u),{data:l}=await a().post("".concat(d,"/jobs"),{translation_key_ids:p,name:r,briefing:t},{headers:{Authorization:c,"Content-Type":"application/json"}}),{id:y}=l;return y}async function w(e){let{apiUrl:r,apiKey:t}=s(),{status:n}=await a().delete("".concat(r,"/jobs/").concat(e),{headers:{Authorization:t}});204!==n&&console.log("Error deleting phrase job with id ".concat(e))}async function S(e){let{apiUrl:r,apiKey:t}=s(),{data:n}=await a().delete("".concat(r,"/keys"),{params:{q:"tags:".concat(e)},headers:{Authorization:t,"Content-Type":"application/json"}});return n}async function k(e){let{namespace:r,tags:t}=e,{apiUrl:n,apiKey:o}=s(),{data:i}=await a().patch("".concat(n,"/keys/tag"),{q:"tags:".concat(r),tags:t.join(",")},{headers:{Authorization:o,"Content-Type":"application/json"}});return i}async function E(e){let{ids:r,tag:t}=e,{apiUrl:n,apiKey:o}=s(),i="name:".concat(r.join(",")),{data:c}=await a().patch("".concat(n,"/keys/untag"),{q:i,tags:t},{headers:{Authorization:o,"Content-Type":"application/json"}});return c}var J=t(47036);async function v(e,r){let{apiUrl:t,apiKey:n}=r?s({localTweaks:{projectToWorkWith:r,tweakEnvInLocal:!0}}):s(),a=await fetch("".concat(t,"/locales/").concat(e,"/download?file_format=i18next&include_empty_translations=true&include_unverified_translations=true&encoding=UTF-8"),{headers:{Authorization:n}}),o=await a.blob(),c=await o.text();return(0,i.h)(!c.includes("&#13"),"Investigate ASCII characters"),c}async function _(e,r){let t=await u(e,r);return t?JSON.parse(await v(t,r)):{}}async function j(){let e={"en-us":{},"ja-jp":{},"es-es":{},fr:{},"it-it":{},"pt-br":{},"ru-ru":{},"vi-vn":{},"tr-tr":{},"uk-ua":{},"zh-cn":{},"ar-ae":{},"ko-kr":{},"de-de":{},nl:{},pl:{}},r=await t.e(9199).then(t.t.bind(t,79199,23));for(let t of o.eZ){let n="".concat((0,o.xj)(t),"/").concat(t,".json"),a=JSON.parse(r.readFileSync(n).toString());e[t]=a}return console.log("API SEARCH :: Phrase fetch interval :: ".concat(Date.now()," :: THIS SHOULD ONLY APPEAR ONCE")),setInterval(async()=>{for(let r of o.eZ){console.log("API SEARCH :: Updating keys for: ".concat(r," at ").concat(Date.now()));let t=await _(r)||{};console.log("API SEARCH :: Keys received for ".concat(r," are: ").concat(Object.keys(t).length,"}")),e[r]=t,console.log("API SEARCH :: Keys stored in messages are: ".concat(Object.keys(e[r]).length,"}"))}},3e5),e}let T=(0,J.r)(j);async function C(e){let{keys:r,locale:t}=e,n=t&&t!==o.tz?t:o.Nq,a=(await T())[n],i={};for(let e of r)i[String(e)]=a[String(e)];return i}async function D(e){for(var r=arguments.length,t=Array(r>1?r-1:0),n=1;n<r;n++)t[n-1]=arguments[n];let a=t.flatMap(e=>Object.keys(e));return 0===a.length?{}:C({keys:a,locale:e})}async function P(e){let r,t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"";return new Promise(n=>{r=setInterval(async()=>{try{console.log("".concat(t,"	uploadWaiter :: running apiUploadsViewDetails"));let r=await p(e);console.log("".concat(t,"	uploadWaiter :: finished apiUploadsViewDetails -> status: ").concat(r)),"success"===r&&n()}catch(r){console.log("".concat(t,"	uploadWaiter :: Err raised waiting for phrase JSON upload for ").concat(e,". Retyring"))}},3e3)}).finally(()=>{clearInterval(r)})}async function W(e){let{file:r,tags:t,localeId:n,logPrefix:o="",apiUrl:i,apiKey:c}=e,s={file:r,file_format:"i18next",update_translations:"true",update_descriptions:"true",file_encoding:"UTF-8",locale_id:n,...t&&{tags:t},skip_upload_tags:"true",skip_unverification:"false",mark_reviewed:"false"};try{let e=await a().post("".concat(i,"/uploads"),s,{headers:{Authorization:c,"Content-Type":"multipart/form-data"},maxContentLength:1/0,maxBodyLength:1/0});if(!e.data.id)throw console.log("".concat(o,"Error uploading file to phrase no data.id")),Error("Error uploading file to phrase ");return console.log("".concat(o,"Start uploadWaiter")),await P(e.data.id,o),console.log("".concat(o,"Finished uploadWaiter")),e.data.id}catch(e){throw console.log("".concat(o,"Failed to upload translations ").concat(e)),Error("Failed to upload translations")}}async function N(e){let{locale:r,file:t,tags:n,logPrefix:a=""}=e,{apiUrl:o,apiKey:i}=s(),c=await u(r);return c?W({apiKey:i,apiUrl:o,file:t,tags:n,logPrefix:a,localeId:c}):""}var x=t(69771);t(998);var R=t(33326);async function I(e){let{keys:r,namespace:t,additionalTags:n,locale:a,logPrefix:o}=e,i="/".concat(t,".json");return R.fs.writeFileSync(i,JSON.stringify(r,null,2)),N({file:R.fs.createReadStream(i),locale:a,tags:[t,...null!=n?n:[]].join(","),logPrefix:o})}function A(e,r){return{hasError:!0,message:[e,r?r instanceof Error?"[".concat(r.message,"]"):"[".concat(r,"]"):""].join(" ")}}async function B(e){let{id:r,name:t,operation:n,entity:a}=e;try{let e=(await g()).find(e=>{var r;return null===(r=e.name)||void 0===r?void 0:r.includes(t)});if(!e||!e.id)return{error:{...A("Job not found for deleted Sanity Id"),id:r,operation:n,processed:a}};return await w(e.id),{job:e}}catch(e){return{error:{...A("Error finding job associated just deleted sanity doc",e),id:r,operation:n,processed:a}}}}async function M(e){let{id:r,namespace:t,operation:n,entity:a}=e;try{return{rowsAffected:await S(t)}}catch(e){return{error:{...A("Error finding job associated just deleted sanity doc",e),id:r,operation:n,processed:a}}}}var O=t(73448);let U="outdated",F="user-interface";async function H(e){let{id:r,keys:t,namespace:n,additionalTags:a,operation:i,entity:c,phraseJob:s,locale:d=o.Nq}=e,u=!1;try{"update"===i&&s&&await k({namespace:n,tags:[U]})}catch(t){u=!0;let e="Sanity Update :: Unexpected error when adding outdated tag to keys from namespace = '".concat(n,"'");O.Tb(Error(e),{extra:{id:r,operation:i,processed:c,phraseJob:s,error:t}})}try{await I({locale:d,keys:t,namespace:n,additionalTags:a,logPrefix:"		"})}catch(e){return{error:{...A("Error when pushing keys to Phrase",e),id:r,operation:i,processed:c}}}if(!u)try{let e=Object.keys(t);await E({tag:U,ids:e})}catch(e){return{error:{...A("Error when removing outdated tag from Phrase for just pushed keys",e),id:r,operation:i,processed:c}}}return{}}function q(e){let{ids:r,operation:t,entity:n}=e;if(!(Array.isArray(r)&&1===r.length))return{error:{...A("Incorrect arguments received for operating with Phrase core unit"),id:r,operation:t,processed:n}};try{return{sanityId:r[0]}}catch(e){return{error:{...A("Error getting variables for operating with Phrase.",e),id:r,operation:t,processed:n}}}}var L=t(65794);async function Y(e,r){try{return{doc:(0,L.I)(await (0,x.jnD)(e,x.nJO.SYSTEM),"Category document not found in Sanity")}}catch(t){return{error:{...A("Error fetching specific category from Sanity for Phrase context",t),id:e,operation:r,processed:"category"}}}}async function z(e,r){let t;try{var n;if((0,i.h)(null===(n=e.url)||void 0===n?void 0:n.current,"Trying to push keys to phrase job from the category without url"),!(t=await m({name:e._id,description:"Translations for: /hc/".concat(o.Nq).concat((0,x.eEh)(e.url.current)),keys:(0,x.XqN)(e),phraseJob:e.phraseJob})))return{error:{...A("Did not get a valid phraseJob when calling apiJobsCreate"),id:e._id,operation:r,processed:"category"}}}catch(t){return{error:{...A("Error creating job in phrase",t),id:e._id,operation:r,processed:"category"}}}if(!e.phraseJob)try{return await (0,x.DMw)(e,t),{phraseJob:t,pushedBackToSanity:!0}}catch(t){return{error:{...A("Error adding phrase job id back in the sanity category",t),id:e._id,operation:r,processed:"category"}}}return{phraseJob:t,pushedBackToSanity:!1}}async function K(e,r){return H({id:e._id,namespace:x.fqr,additionalTags:[e._id],keys:(0,x.XqN)(e),phraseJob:e.phraseJob,operation:r,entity:"category"})}function V(e,r){try{if(!e.sourceLocale)return{error:{...A("Incorrect sourceLocale attribute for sending category to phrase"),id:e._id,operation:r,processed:"category"}};if((0,o.aU)(e.sourceLocale).app!==o.Nq)return{error:{hasError:!1,id:e._id,message:"Category is exceptional because source locale is not en-US, we should not push to phrase in this case.",operation:r,processed:"category"}};return{}}catch(t){return{error:{...A("Error raised when checking sourceLocale attribute for sending category to phrase",t),id:e._id,operation:r,processed:"category"}}}}async function $(e){let r=q({ids:e,operation:"create",entity:"category"});if("error"in r)return r.error;let{sanityId:t}=r,n=await Y(t,"create");if("error"in n)return n.error;let a=V(n.doc,"create");if("error"in a)return a.error;let o=await K(n.doc,"create");if("error"in o)return o.error;let i=await z(n.doc,"create");if("error"in i)return i.error;let{phraseJob:c,pushedBackToSanity:s}=i;return{hasError:!1,message:"Phrase process for recent created sanity category has finished correctly, phraseJob: ".concat(c,", pushed back to Sanity: ").concat(s),id:t,operation:"create",processed:"category"}}async function Z(e){let r=q({ids:e,operation:"delete",entity:"category"});if("error"in r)return r.error;let{sanityId:t}=r,n=await B({id:t,name:t,operation:"delete",entity:"category"});if("error"in n)return n.error;let a=await M({id:t,namespace:t,operation:"delete",entity:"category"});return"error"in a?a.error:{hasError:!1,message:"Delete keys and job associated to Sanity category succeeded",id:t,operation:"delete",processed:"category"}}async function G(e){let r=q({ids:e,operation:"update",entity:"category"});if("error"in r)return r.error;let{sanityId:t}=r,n=await Y(t,"update");if("error"in n)return n.error;let a=V(n.doc,"update");if("error"in a)return a.error;let o=await K(n.doc,"update");if("error"in o)return o.error;let i=await z(n.doc,"update");if("error"in i)return i.error;let{phraseJob:c,pushedBackToSanity:s}=i;return{hasError:!1,message:"Phrase process for recent update sanity category has finished correctly, phraseJob: ".concat(c,", ").concat(s?"pushed back to Sanity: ".concat(s):"job id already present in sanity doc"),id:t,operation:"update",processed:"category"}}async function X(e,r,t,n,a,i,c){let s;try{if(!(s=await m({name:a,description:"Translations for ".concat(t,": /hc/").concat(o.Nq),keys:i,phraseJob:c})))return{error:{...A("Did not get a valid phraseJob when calling apiJobsCreate"),id:e,operation:r,processed:n}}}catch(t){return{error:{...A("Error creating job in phrase",t),id:e,operation:r,processed:n}}}if(!c)try{return await (0,x.DMw)({_id:e,phraseJob:c},s),{phraseJob:s,pushedBackToSanity:!0}}catch(a){return{error:{...A("Error adding phrase job id back in the sanity ".concat(t),a),id:e,operation:r,processed:n}}}return{phraseJob:s,pushedBackToSanity:!1}}async function Q(e,r,t,n,a){try{let{response:e}=await a(x.nJO.SYSTEM);return(0,L.I)(null==e?void 0:e[0],"".concat(t," document not found in Sanity")),{doc:null==e?void 0:e[0]}}catch(a){return{error:{...A("Error fetching ".concat(t," page from Sanity for Phrase context"),a),id:e,operation:r,processed:n}}}}async function ee(e,r,t,n,a,o){let i=q({ids:e,operation:"update",entity:r});if("error"in i)return i.error;let{sanityId:c}=i,s=await Q(c,"update",t,r,a);if("error"in s)return s.error;let d=o(s.doc),u=await H({id:s.doc._id,namespace:n,keys:d,phraseJob:s.doc.phraseJob,operation:"update",entity:r});if("error"in u)return u.error;let p=await X(s.doc._id,"update",t,r,n,d,s.doc.phraseJob);if("error"in p)return p.error;let{phraseJob:l,pushedBackToSanity:f}=p;return{hasError:!1,message:"Phrase process for recent update sanity ".concat(t," has finished correctly, phraseJob: ").concat(l,", ").concat(f?"pushed back to Sanity: ".concat(f):"job id already present in sanity doc"),id:c,operation:"update",processed:r}}async function er(e,r,t,n,a,o){let i=q({ids:e,operation:"create",entity:r});if("error"in i)return i.error;let{sanityId:c}=i,s=await Q(c,"create",t,r,a);if("error"in s)return s.error;let d=o(s.doc),u=await H({id:s.doc._id,namespace:n,keys:d,phraseJob:s.doc.phraseJob,operation:"create",entity:r});if("error"in u)return u.error;let p=await X(s.doc._id,"create",t,r,n,d,s.doc.phraseJob);if("error"in p)return p.error;let{phraseJob:l,pushedBackToSanity:f}=p;return{hasError:!1,message:"Phrase process for recent created sanity ".concat(t," has finished correctly, phraseJob: ").concat(l,", pushed back to Sanity: ").concat(f),id:c,operation:"create",processed:r}}async function et(e,r,t){let n=q({ids:e,operation:"delete",entity:r});if("error"in n)return n.error;let{sanityId:a}=n,o=await B({id:a,name:a,operation:"delete",entity:r});if("error"in o)return o.error;let i=await M({id:a,namespace:a,operation:"delete",entity:r});return"error"in i?i.error:{hasError:!1,message:"Delete keys and job associated to Sanity ".concat(t," succeeded"),id:a,operation:"delete",processed:r}}(0,J.r)(function(){return{name:"phrase",update:G,create:$,delete:Z}});let en="landingHome",ea="homepage",eo=x.xnH,ei=x.CjB,ec=async e=>(0,x.AUq)(e);async function es(e){return er(e,en,ea,eo,ec,ei)}async function ed(e){return ee(e,en,ea,eo,ec,ei)}async function eu(e){return et(e,en,ea)}async function ep(e,r){try{let{response:e}=await (0,x.n7l)(x.nJO.SYSTEM);return(0,L.I)(e[0],"Forms landing page document not found in Sanity"),{doc:e[0]}}catch(t){return{error:{...A("Error fetching forms landing page from Sanity for Phrase context",t),id:e,operation:r,processed:"landingForms"}}}}async function el(e,r){let t;try{if(!(t=await m({name:x.mR3,description:"Translations for forms landing page: /hc/".concat(o.Nq,"/forms"),keys:(0,x.B$0)(e),phraseJob:e.phraseJob})))return{error:{...A("Did not get a valid phraseJob when calling apiJobsCreate"),id:e._id,operation:r,processed:"landingForms"}}}catch(t){return{error:{...A("Error creating job in phrase",t),id:e._id,operation:r,processed:"landingForms"}}}if(!e.phraseJob)try{return await (0,x.DMw)(e,t),{phraseJob:t,pushedBackToSanity:!0}}catch(t){return{error:{...A("Error adding phrase job id back in the sanity forms landing page",t),id:e._id,operation:r,processed:"landingForms"}}}return{phraseJob:t,pushedBackToSanity:!1}}async function ef(e,r){return H({id:e._id,namespace:x.mR3,keys:(0,x.B$0)(e),phraseJob:e.phraseJob,operation:r,entity:"landingForms"})}async function eh(e){let r=q({ids:e,operation:"create",entity:"landingForms"});if("error"in r)return r.error;let{sanityId:t}=r,n=await ep(t,"create");if("error"in n)return n.error;let a=await ef(n.doc,"create");if("error"in a)return a.error;let o=await el(n.doc,"create");if("error"in o)return o.error;let{phraseJob:i,pushedBackToSanity:c}=o;return{hasError:!1,message:"Phrase process for recent created sanity forms landing page has finished correctly, phraseJob: ".concat(i,", pushed back to Sanity: ").concat(c),id:t,operation:"create",processed:"landingForms"}}async function ey(e){let r=q({ids:e,operation:"delete",entity:"landingForms"});if("error"in r)return r.error;let{sanityId:t}=r,n=await B({id:t,name:t,operation:"delete",entity:"landingForms"});if("error"in n)return n.error;let a=await M({id:t,namespace:t,operation:"delete",entity:"landingForms"});return"error"in a?a.error:{hasError:!1,message:"Delete keys and job associated to Sanity forms landing page succeeded",id:t,operation:"delete",processed:"landingForms"}}async function eg(e){let r=q({ids:e,operation:"update",entity:"landingForms"});if("error"in r)return r.error;let{sanityId:t}=r,n=await ep(t,"update");if("error"in n)return n.error;let a=await ef(n.doc,"update");if("error"in a)return a.error;let o=await el(n.doc,"update");if("error"in o)return o.error;let{phraseJob:i,pushedBackToSanity:c}=o;return{hasError:!1,message:"Phrase process for recent update sanity forms landing has finished correctly, phraseJob: ".concat(i,", ").concat(c?"pushed back to Sanity: ".concat(c):"job id already present in sanity doc"),id:t,operation:"update",processed:"landingForms"}}async function eb(e,r){try{let{response:e}=await (0,x.Uw)(x.nJO.SYSTEM);return(0,L.I)(e,"Confirmation page document not found in Sanity"),{doc:e}}catch(t){return{error:{...A("Error fetching confirmation page from Sanity for Phrase context",t),id:e,operation:r,processed:"landingConfirmation"}}}}async function em(e,r){let t;try{if(!(t=await m({name:x.btj,description:"Translations for confirmation: /hc/".concat(o.Nq),keys:(0,x.BU3)(e),phraseJob:e.phraseJob})))return{error:{...A("Did not get a valid phraseJob when calling apiJobsCreate"),id:e._id,operation:r,processed:"landingConfirmation"}}}catch(t){return{error:{...A("Error creating job in phrase",t),id:e._id,operation:r,processed:"landingConfirmation"}}}if(!e.phraseJob)try{return await (0,x.DMw)(e,t),{phraseJob:t,pushedBackToSanity:!0}}catch(t){return{error:{...A("Error adding phrase job id back in the sanity confirmation page",t),id:e._id,operation:r,processed:"landingConfirmation"}}}return{phraseJob:t,pushedBackToSanity:!1}}async function ew(e,r){return H({id:e._id,namespace:x.btj,keys:(0,x.BU3)(e),phraseJob:e.phraseJob,operation:r,entity:"landingConfirmation"})}async function eS(e){let r=q({ids:e,operation:"create",entity:"landingConfirmation"});if("error"in r)return r.error;let{sanityId:t}=r,n=await eb(t,"create");if("error"in n)return n.error;let a=await ew(n.doc,"create");if("error"in a)return a.error;let o=await em(n.doc,"create");if("error"in o)return o.error;let{phraseJob:i,pushedBackToSanity:c}=o;return{hasError:!1,message:"Phrase process for recent created sanity confirmation has finished correctly, phraseJob: ".concat(i,", pushed back to Sanity: ").concat(c),id:t,operation:"create",processed:"landingConfirmation"}}async function ek(e){let r=q({ids:e,operation:"delete",entity:"landingConfirmation"});if("error"in r)return r.error;let{sanityId:t}=r,n=await B({id:t,name:t,operation:"delete",entity:"landingConfirmation"});if("error"in n)return n.error;let a=await M({id:t,namespace:t,operation:"delete",entity:"landingConfirmation"});return"error"in a?a.error:{hasError:!1,message:"Delete keys and job associated to Sanity confirmation page succeeded",id:t,operation:"delete",processed:"landingConfirmation"}}async function eE(e){let r=q({ids:e,operation:"update",entity:"landingConfirmation"});if("error"in r)return r.error;let{sanityId:t}=r,n=await eb(t,"update");if("error"in n)return n.error;let a=await ew(n.doc,"update");if("error"in a)return a.error;let o=await em(n.doc,"update");if("error"in o)return o.error;let{phraseJob:i,pushedBackToSanity:c}=o;return{hasError:!1,message:"Phrase process for recent update sanity confirmation page has finished correctly, phraseJob: ".concat(i,", ").concat(c?"pushed back to Sanity: ".concat(c):"job id already present in sanity doc"),id:t,operation:"update",processed:"landingConfirmation"}}async function eJ(e,r){try{let{response:e}=await (0,x.STB)(x.nJO.SYSTEM);return(0,L.I)(e[0],"Search Results document not found in Sanity"),{doc:e[0]}}catch(t){return{error:{...A("Error fetching search results page from Sanity for Phrase context",t),id:e,operation:r,processed:"landingSearchResults"}}}}async function ev(e,r){let t;try{if(!(t=await m({name:x.CuR,description:"Translations for search results page: /hc/".concat(o.Nq),keys:(0,x.FKB)(e),phraseJob:e.phraseJob})))return{error:{...A("Did not get a valid phraseJob when calling apiJobsCreate"),id:e._id,operation:r,processed:"landingSearchResults"}}}catch(t){return{error:{...A("Error creating job in phrase",t),id:e._id,operation:r,processed:"landingSearchResults"}}}if(!e.phraseJob)try{return await (0,x.DMw)(e,t),{phraseJob:t,pushedBackToSanity:!0}}catch(t){return{error:{...A("Error adding phrase job id back in the sanity search results page",t),id:e._id,operation:r,processed:"landingSearchResults"}}}return{phraseJob:t,pushedBackToSanity:!1}}async function e_(e,r){return H({id:e._id,namespace:x.CuR,keys:(0,x.FKB)(e),phraseJob:e.phraseJob,operation:r,entity:"landingSearchResults"})}async function ej(e){let r=q({ids:e,operation:"create",entity:"landingSearchResults"});if("error"in r)return r.error;let{sanityId:t}=r,n=await eJ(t,"create");if("error"in n)return n.error;let a=await e_(n.doc,"create");if("error"in a)return a.error;let o=await ev(n.doc,"create");if("error"in o)return o.error;let{phraseJob:i,pushedBackToSanity:c}=o;return{hasError:!1,message:"Phrase process for recent created sanity search results page has finished correctly, phraseJob: ".concat(i,", pushed back to Sanity: ").concat(c),id:t,operation:"create",processed:"landingSearchResults"}}async function eT(e){let r=q({ids:e,operation:"delete",entity:"landingSearchResults"});if("error"in r)return r.error;let{sanityId:t}=r,n=await B({id:t,name:t,operation:"delete",entity:"landingSearchResults"});if("error"in n)return n.error;let a=await M({id:t,namespace:t,operation:"delete",entity:"landingSearchResults"});return"error"in a?a.error:{hasError:!1,message:"Delete keys and job associated to Sanity search results page succeeded",id:t,operation:"delete",processed:"landingSearchResults"}}async function eC(e){let r=q({ids:e,operation:"update",entity:"landingSearchResults"});if("error"in r)return r.error;let{sanityId:t}=r,n=await eJ(t,"update");if("error"in n)return n.error;let a=await e_(n.doc,"update");if("error"in a)return a.error;let o=await ev(n.doc,"update");if("error"in o)return o.error;let{phraseJob:i,pushedBackToSanity:c}=o;return{hasError:!1,message:"Phrase process for recent update sanity search results page has finished correctly, phraseJob: ".concat(i,", ").concat(c?"pushed back to Sanity: ".concat(c):"job id already present in sanity doc"),id:t,operation:"update",processed:"landingSearchResults"}}async function eD(e,r){try{let{response:e}=await (0,x.BRE)(x.nJO.SYSTEM);return(0,L.I)(e,"NotFound page document not found in Sanity"),{doc:e}}catch(t){return{error:{...A("Error fetching not found page from Sanity for Phrase context",t),id:e,operation:r,processed:"landingNotFound"}}}}async function eP(e,r){let t;try{if(!(t=await m({name:x.DSK,description:"Translations for not found: /hc/".concat(o.Nq),keys:(0,x.kbb)(e),phraseJob:e.phraseJob})))return{error:{...A("Did not get a valid phraseJob when calling apiJobsCreate"),id:e._id,operation:r,processed:"landingNotFound"}}}catch(t){return{error:{...A("Error creating job in phrase",t),id:e._id,operation:r,processed:"landingNotFound"}}}if(!e.phraseJob)try{return await (0,x.DMw)(e,t),{phraseJob:t,pushedBackToSanity:!0}}catch(t){return{error:{...A("Error adding phrase job id back in the sanity not found page",t),id:e._id,operation:r,processed:"landingNotFound"}}}return{phraseJob:t,pushedBackToSanity:!1}}async function eW(e,r){return H({id:e._id,namespace:x.DSK,keys:(0,x.kbb)(e),phraseJob:e.phraseJob,operation:r,entity:"landingNotFound"})}async function eN(e){let r=q({ids:e,operation:"create",entity:"landingNotFound"});if("error"in r)return r.error;let{sanityId:t}=r,n=await eD(t,"create");if("error"in n)return n.error;let a=await eW(n.doc,"create");if("error"in a)return a.error;let o=await eP(n.doc,"create");if("error"in o)return o.error;let{phraseJob:i,pushedBackToSanity:c}=o;return{hasError:!1,message:"Phrase process for recent created sanity not found has finished correctly, phraseJob: ".concat(i,", pushed back to Sanity: ").concat(c),id:t,operation:"create",processed:"landingNotFound"}}async function ex(e){let r=q({ids:e,operation:"delete",entity:"landingNotFound"});if("error"in r)return r.error;let{sanityId:t}=r,n=await B({id:t,name:t,operation:"delete",entity:"landingNotFound"});if("error"in n)return n.error;let a=await M({id:t,namespace:t,operation:"delete",entity:"landingNotFound"});return"error"in a?a.error:{hasError:!1,message:"Delete keys and job associated to Sanity not found page succeeded",id:t,operation:"delete",processed:"landingNotFound"}}async function eR(e){let r=q({ids:e,operation:"update",entity:"landingNotFound"});if("error"in r)return r.error;let{sanityId:t}=r,n=await eD(t,"update");if("error"in n)return n.error;let a=await eW(n.doc,"update");if("error"in a)return a.error;let o=await eP(n.doc,"update");if("error"in o)return o.error;let{phraseJob:i,pushedBackToSanity:c}=o;return{hasError:!1,message:"Phrase process for recent update sanity not found page has finished correctly, phraseJob: ".concat(i,", ").concat(c?"pushed back to Sanity: ".concat(c):"job id already present in sanity doc"),id:t,operation:"update",processed:"landingNotFound"}}(0,J.r)(function(){return{name:"phrase",update:ed,create:es,delete:eu}}),(0,J.r)(function(){return{name:"phrase",update:eg,create:eh,delete:ey}}),(0,J.r)(function(){return{name:"phrase",update:eE,create:eS,delete:ek}}),(0,J.r)(function(){return{name:"phrase",update:eC,create:ej,delete:eT}}),(0,J.r)(function(){return{name:"phrase",update:eR,create:eN,delete:ex}});let eI="landingDLT",eA="DLT landing page",eB=x.c53,eM=x.GQP,eO=async e=>(0,x.tN0)(e);async function eU(e){return er(e,eI,eA,eB,eO,eM)}async function eF(e){return ee(e,eI,eA,eB,eO,eM)}async function eH(e){return et(e,eI,eA)}(0,J.r)(function(){return{name:"phrase",update:eF,create:eU,delete:eH}});let eq="landingPro",eL="Pro landing page",eY=x.Pb,ez=x.bvz,eK=async e=>(0,x.$xn)(e);async function eV(e){return er(e,eq,eL,eY,eK,ez)}async function e$(e){return ee(e,eq,eL,eY,eK,ez)}async function eZ(e){return et(e,eq,eL)}(0,J.r)(function(){return{name:"phrase",update:e$,create:eV,delete:eZ}});let eG="landingProApp",eX="Pro App landing page",eQ=x.Il8,e0=x.EtN,e1=async e=>(0,x.Mod)(e);async function e3(e){return er(e,eG,eX,eQ,e1,e0)}async function e9(e){return ee(e,eG,eX,eQ,e1,e0)}async function e5(e){return et(e,eG,eX)}(0,J.r)(function(){return{name:"phrase",update:e9,create:e3,delete:e5}});let e8="landingKraken",e2="Kraken landing page",e4=x.jni,e6=x.ZRS,e7=async e=>(0,x.V3M)(e);async function re(e){return er(e,e8,e2,e4,e7,e6)}async function rr(e){return ee(e,e8,e2,e4,e7,e6)}async function rt(e){return et(e,e8,e2)}(0,J.r)(function(){return{name:"phrase",update:rr,create:re,delete:rt}});let rn="landingKrakenApp",ra="Kraken App landing page",ro=x.HqA,ri=x.EzE,rc=async e=>(0,x.lGX)(e);async function rs(e){return er(e,rn,ra,ro,rc,ri)}async function rd(e){return ee(e,rn,ra,ro,rc,ri)}async function ru(e){return et(e,rn,ra)}(0,J.r)(function(){return{name:"phrase",update:rd,create:rs,delete:ru}});let rp="landingContact",rl="Contact landing page",rf=x.vpx,rh=x.BFf,ry=async e=>(0,x.V_V)(e);async function rg(e){return er(e,rp,rl,rf,ry,rh)}async function rb(e){return ee(e,rp,rl,rf,ry,rh)}async function rm(e){return et(e,rp,rl)}(0,J.r)(function(){return{name:"phrase",update:rb,create:rg,delete:rm}});let rw="landingStock",rS="Stock landing page",rk=x.TuO,rE=x.qoh,rJ=async e=>(0,x.b5Y)(e);async function rv(e){return er(e,rw,rS,rk,rJ,rE)}async function r_(e){return ee(e,rw,rS,rk,rJ,rE)}async function rj(e){return et(e,rw,rS)}async function rT(e){let{id:r,operation:t}=e;try{return{doc:(0,L.I)((await (0,x.iMl)(x.nJO.SYSTEM))[0])}}catch(e){return{error:{...A("Error fetching shared translations from Sanity for Phrase context",e),id:r,operation:t,processed:"layout"}}}}(0,J.r)(function(){return{name:"phrase",update:r_,create:rv,delete:rj}});var rC=t(95492),rD=t.n(rC);async function rP(e){let{doc:r,operation:t}=e,n=(0,x.ioi)(r.messages.searchBar.needHelpContent),a=(0,o.tZ)(r.messages),i={...rD()(a,(e,r)=>r.includes("needHelpContent")),"searchBar-needHelpContent":n};return H({id:r._id,namespace:F,keys:i,phraseJob:r.phraseJob,operation:t,entity:"layout"})}async function rW(e){let r,{doc:t,operation:n}=e;try{if(!(r=await m({name:F,description:"Translations for common messages shared by all the pages in the app",keys:(0,o.tZ)(t.messages),phraseJob:t.phraseJob})))return{error:{...A("Did not get a valid phraseJob when calling apiJobsCreate"),id:t._id,operation:n,processed:"layout"}}}catch(e){return{error:{...A("Error creating job in phrase",e),id:t._id,operation:n,processed:"layout"}}}if(!t.phraseJob)try{return await (0,x.DMw)(t,r),{phraseJob:r,pushedBackToSanity:!0}}catch(e){return{error:{...A("Error adding phrase job id back in the sanity sharedTranslations document",e),id:t._id,operation:n,processed:"layout"}}}return{phraseJob:r,pushedBackToSanity:!1}}async function rN(e){let r=q({ids:e,operation:"create",entity:"layout"});if("error"in r)return r.error;let{sanityId:t}=r,n=await rT({id:t,operation:"create"});if("error"in n)return n.error;let a=await rP({doc:n.doc,operation:"create"});if("error"in a)return a.error;let o=await rW({doc:n.doc,operation:"create"});if("error"in o)return o.error;let{phraseJob:i,pushedBackToSanity:c}=o;return{hasError:!1,message:"Phrase process for recent created sanity sharedTranslations doc has finished correctly, phraseJob: ".concat(i,", pushed back to Sanity: ").concat(c),id:t,operation:"create",processed:"layout"}}async function rx(e){let r=q({ids:e,operation:"delete",entity:"layout"});if("error"in r)return r.error;let{sanityId:t}=r,n=await B({id:t,name:F,operation:"delete",entity:"layout"});if("error"in n)return n.error;let a=await M({id:t,namespace:F,operation:"delete",entity:"layout"});return"error"in a?a.error:{hasError:!1,message:"Delete keys and job associated to Sanity sharedTranslations doc succeeded",id:t,operation:"delete",processed:"layout"}}async function rR(e){let r=q({ids:e,operation:"update",entity:"layout"});if("error"in r)return r.error;let{sanityId:t}=r,n=await rT({id:t,operation:"update"});if("error"in n)return n.error;let{doc:a}=n,o=await rP({doc:a,operation:"update"});if("error"in o)return o.error;let i=await rW({doc:a,operation:"update"});if("error"in i)return i.error;let{phraseJob:c,pushedBackToSanity:s}=i;return{hasError:!1,message:"Phrase process for recent update sanity sharedTranslations has finished correctly, phraseJob: ".concat(c,", ").concat(s?"pushed back to Sanity: ".concat(s):"job id already present in sanity doc"),id:t,operation:"update",processed:"layout"}}async function rI(e,r){try{return{doc:(0,L.I)(await (0,x.CEO)(e,x.nJO.SYSTEM),"Section document not found in Sanity")}}catch(t){return{error:{...A("Error fetching specific section from Sanity for Phrase context",t),id:e,operation:r,processed:"section"}}}}async function rA(e,r){let t;try{var n;if((0,i.h)(null===(n=e.url)||void 0===n?void 0:n.current,"Trying to push keys to phrase job from the section without url"),!(t=await m({name:e._id,description:"Translations for: /hc/".concat(o.Nq).concat((0,x.uqQ)(e.url.current)),keys:(0,x.uRH)(e),phraseJob:e.phraseJob})))return{error:{...A("Did not get a valid phraseJob when calling apiJobsCreate"),id:e._id,operation:r,processed:"section"}}}catch(t){return{error:{...A("Error creating job in phrase",t),id:e._id,operation:r,processed:"section"}}}if(!e.phraseJob)try{return await (0,x.DMw)(e,t),{phraseJob:t,pushedBackToSanity:!0}}catch(t){return{error:{...A("Error adding phrase job id back in the sanity section",t),id:e._id,operation:r,processed:"section"}}}return{phraseJob:t,pushedBackToSanity:!1}}async function rB(e,r){return H({id:e._id,namespace:x.S5V,additionalTags:[e._id],keys:(0,x.uRH)(e),phraseJob:e.phraseJob,operation:r,entity:"section"})}function rM(e,r){try{if(!e.sourceLocale)return{error:{...A("Incorrect sourceLocale attribute for sending section to phrase"),id:e._id,operation:r,processed:"section"}};if((0,o.aU)(e.sourceLocale).app!==o.Nq)return{error:{hasError:!1,id:e._id,message:"Section is exceptional because source locale is not en-US, we should not push to phrase in this case.",operation:r,processed:"section"}};return{}}catch(t){return{error:{...A("Error raised when checking sourceLocale attribute for sending section to phrase",t),id:e._id,operation:r,processed:"section"}}}}async function rO(e){let r=q({ids:e,operation:"create",entity:"section"});if("error"in r)return r.error;let{sanityId:t}=r,n=await rI(t,"create");if("error"in n)return n.error;let a=rM(n.doc,"create");if("error"in a)return a.error;let o=await rB(n.doc,"create");if("error"in o)return o.error;let i=await rA(n.doc,"create");if("error"in i)return i.error;let{phraseJob:c,pushedBackToSanity:s}=i;return{hasError:!1,message:"Phrase process for recent created sanity section has finished correctly, phraseJob: ".concat(c,", pushed back to Sanity: ").concat(s),id:t,operation:"create",processed:"section"}}async function rU(e){let r=q({ids:e,operation:"delete",entity:"section"});if("error"in r)return r.error;let{sanityId:t}=r,n=await B({id:t,name:t,operation:"delete",entity:"section"});if("error"in n)return n.error;let a=await M({id:t,namespace:t,operation:"delete",entity:"section"});return"error"in a?a.error:{hasError:!1,message:"Delete keys and job associated to Sanity section succeeded",id:t,operation:"delete",processed:"section"}}async function rF(e){let r=q({ids:e,operation:"update",entity:"section"});if("error"in r)return r.error;let{sanityId:t}=r,n=await rI(t,"update");if("error"in n)return n.error;let a=rM(n.doc,"update");if("error"in a)return a.error;let o=await rB(n.doc,"update");if("error"in o)return o.error;let i=await rA(n.doc,"update");if("error"in i)return i.error;let{phraseJob:c,pushedBackToSanity:s}=i;return{hasError:!1,message:"Phrase process for recent update sanity section has finished correctly, phraseJob: ".concat(c,", ").concat(s?"pushed back to Sanity: ".concat(s):"job id already present in sanity doc"),id:t,operation:"update",processed:"section"}}async function rH(e,r){try{let e=await (0,x.It8)(x.nJO.SYSTEM);return(0,L.I)(e,"Contact us document not found in Sanity"),{doc:e}}catch(t){return{error:{...A("Error fetching Contact us widget from Sanity for Phrase context",t),id:e,operation:r,processed:"contactUsWidget"}}}}async function rq(e,r){let t;try{if(!(t=await m({name:x.nfC,description:"Translations for Contact us widget",keys:(0,x.tO1)(e),phraseJob:e.phraseJob})))return{error:{...A("Did not get a valid phraseJob when calling apiJobsCreate"),id:e._id,operation:r,processed:"contactUsWidget"}}}catch(t){return{error:{...A("Error creating job in phrase",t),id:e._id,operation:r,processed:"contactUsWidget"}}}if(!e.phraseJob)try{return await (0,x.DMw)(e,t),{phraseJob:t,pushedBackToSanity:!0}}catch(t){return{error:{...A("Error adding phrase job id back in the sanity Contact us widget",t),id:e._id,operation:r,processed:"contactUsWidget"}}}return{phraseJob:t,pushedBackToSanity:!1}}async function rL(e,r){return H({id:e._id,namespace:x.nfC,keys:(0,x.tO1)(e),phraseJob:e.phraseJob,operation:r,entity:"contactUsWidget"})}async function rY(e){let r=q({ids:e,operation:"create",entity:"contactUsWidget"});if("error"in r)return r.error;let{sanityId:t}=r,n=await rH(t,"create");if("error"in n)return n.error;let a=await rL(n.doc,"create");if("error"in a)return a.error;let o=await rq(n.doc,"create");if("error"in o)return o.error;let{phraseJob:i,pushedBackToSanity:c}=o;return{hasError:!1,message:"Phrase process for recent created sanity Contact us widget has finished correctly, phraseJob: ".concat(i,", pushed back to Sanity: ").concat(c),id:t,operation:"create",processed:"contactUsWidget"}}async function rz(e){let r=q({ids:e,operation:"delete",entity:"contactUsWidget"});if("error"in r)return r.error;let{sanityId:t}=r,n=await B({id:t,name:t,operation:"delete",entity:"contactUsWidget"});if("error"in n)return n.error;let a=await M({id:t,namespace:t,operation:"delete",entity:"contactUsWidget"});return"error"in a?a.error:{hasError:!1,message:"Delete keys and job associated to Sanity Contact us succeeded",id:t,operation:"delete",processed:"contactUsWidget"}}async function rK(e){let r=q({ids:e,operation:"update",entity:"contactUsWidget"});if("error"in r)return r.error;let{sanityId:t}=r,n=await rH(t,"update");if("error"in n)return n.error;let a=await rL(n.doc,"update");if("error"in a)return a.error;let o=await rq(n.doc,"update");if("error"in o)return o.error;let{phraseJob:i,pushedBackToSanity:c}=o;return{hasError:!1,message:"Phrase process for recent update sanity Contact us widget has finished correctly, phraseJob: ".concat(i,", ").concat(c?"pushed back to Sanity: ".concat(c):"job id already present in sanity doc"),id:t,operation:"create",processed:"contactUsWidget"}}async function rV(e,r){try{let e=await (0,x.Rbo)(x.nJO.SYSTEM);return(0,L.I)(e,"Need help document not found in Sanity"),{doc:e}}catch(t){return{error:{...A("Error fetching Need help widget from Sanity for Phrase context",t),id:e,operation:r,processed:"needHelpWidget"}}}}async function r$(e,r){let t;try{if(!(t=await m({name:x.$Vk,description:"Translations for Need help widget",keys:(0,x.nx9)(e),phraseJob:e.phraseJob})))return{error:{...A("Did not get a valid phraseJob when calling apiJobsCreate"),id:e._id,operation:r,processed:"needHelpWidget"}}}catch(t){return{error:{...A("Error creating job in phrase",t),id:e._id,operation:r,processed:"needHelpWidget"}}}if(!e.phraseJob)try{return await (0,x.DMw)(e,t),{phraseJob:t,pushedBackToSanity:!0}}catch(t){return{error:{...A("Error adding phrase job id back in the sanity Need help widget",t),id:e._id,operation:r,processed:"needHelpWidget"}}}return{phraseJob:t,pushedBackToSanity:!1}}async function rZ(e,r){return H({id:e._id,namespace:x.$Vk,keys:(0,x.nx9)(e),phraseJob:e.phraseJob,operation:r,entity:"needHelpWidget"})}async function rG(e){let r=q({ids:e,operation:"create",entity:"needHelpWidget"});if("error"in r)return r.error;let{sanityId:t}=r,n=await rV(t,"create");if("error"in n)return n.error;let a=await rZ(n.doc,"create");if("error"in a)return a.error;let o=await r$(n.doc,"create");if("error"in o)return o.error;let{phraseJob:i,pushedBackToSanity:c}=o;return{hasError:!1,message:"Phrase process for recent created sanity Need help widget has finished correctly, phraseJob: ".concat(i,", pushed back to Sanity: ").concat(c),id:t,operation:"create",processed:"needHelpWidget"}}async function rX(e){let r=q({ids:e,operation:"delete",entity:"needHelpWidget"});if("error"in r)return r.error;let{sanityId:t}=r,n=await B({id:t,name:t,operation:"delete",entity:"needHelpWidget"});if("error"in n)return n.error;let a=await M({id:t,namespace:t,operation:"delete",entity:"needHelpWidget"});return"error"in a?a.error:{hasError:!1,message:"Delete keys and job associated to Sanity Need help succeeded",id:t,operation:"delete",processed:"needHelpWidget"}}async function rQ(e){let r=q({ids:e,operation:"update",entity:"needHelpWidget"});if("error"in r)return r.error;let{sanityId:t}=r,n=await rV(t,"update");if("error"in n)return n.error;let a=await rZ(n.doc,"update");if("error"in a)return a.error;let o=await r$(n.doc,"update");if("error"in o)return o.error;let{phraseJob:i,pushedBackToSanity:c}=o;return{hasError:!1,message:"Phrase process for recent update sanity Need help widget has finished correctly, phraseJob: ".concat(i,", ").concat(c?"pushed back to Sanity: ".concat(c):"job id already present in sanity doc"),id:t,operation:"create",processed:"needHelpWidget"}}async function r0(e,r){try{let e=await (0,x.M10)(x.nJO.SYSTEM);return(0,L.I)(e,"Email us document not found in Sanity"),{doc:e}}catch(t){return{error:{...A("Error fetching Email us widget from Sanity for Phrase context",t),id:e,operation:r,processed:"emailUsWidget"}}}}async function r1(e,r){let t;try{if(!(t=await m({name:x.SNk,description:"Translations for Email us widget",keys:(0,x.CY5)(e),phraseJob:e.phraseJob})))return{error:{...A("Did not get a valid phraseJob when calling apiJobsCreate"),id:e._id,operation:r,processed:"emailUsWidget"}}}catch(t){return{error:{...A("Error creating job in phrase",t),id:e._id,operation:r,processed:"emailUsWidget"}}}if(!e.phraseJob)try{return await (0,x.DMw)(e,t),{phraseJob:t,pushedBackToSanity:!0}}catch(t){return{error:{...A("Error adding phrase job id back in the sanity Email us widget",t),id:e._id,operation:r,processed:"emailUsWidget"}}}return{phraseJob:t,pushedBackToSanity:!1}}async function r3(e,r){return H({id:e._id,namespace:x.SNk,keys:(0,x.CY5)(e),phraseJob:e.phraseJob,operation:r,entity:"emailUsWidget"})}async function r9(e){let r=q({ids:e,operation:"create",entity:"emailUsWidget"});if("error"in r)return r.error;let{sanityId:t}=r,n=await r0(t,"create");if("error"in n)return n.error;let a=await r3(n.doc,"create");if("error"in a)return a.error;let o=await r1(n.doc,"create");if("error"in o)return o.error;let{phraseJob:i,pushedBackToSanity:c}=o;return{hasError:!1,message:"Phrase process for recent created sanity Email us widget has finished correctly, phraseJob: ".concat(i,", pushed back to Sanity: ").concat(c),id:t,operation:"create",processed:"emailUsWidget"}}async function r5(e){let r=q({ids:e,operation:"delete",entity:"emailUsWidget"});if("error"in r)return r.error;let{sanityId:t}=r,n=await B({id:t,name:t,operation:"delete",entity:"emailUsWidget"});if("error"in n)return n.error;let a=await M({id:t,namespace:t,operation:"delete",entity:"emailUsWidget"});return"error"in a?a.error:{hasError:!1,message:"Delete keys and job associated to Sanity Email us widget succeeded",id:t,operation:"delete",processed:"emailUsWidget"}}async function r8(e){let r=q({ids:e,operation:"update",entity:"emailUsWidget"});if("error"in r)return r.error;let{sanityId:t}=r,n=await r0(t,"update");if("error"in n)return n.error;let a=await r3(n.doc,"update");if("error"in a)return a.error;let o=await r1(n.doc,"update");if("error"in o)return o.error;let{phraseJob:i,pushedBackToSanity:c}=o;return{hasError:!1,message:"Phrase process for recent update sanity Email us widget has finished correctly, phraseJob: ".concat(i,", ").concat(c?"pushed back to Sanity: ".concat(c):"job id already present in sanity doc"),id:t,operation:"create",processed:"emailUsWidget"}}async function r2(e,r){try{let e=await (0,x.AKL)(x.nJO.SYSTEM);return(0,L.I)(e,"Banner Notification document not found in Sanity"),{doc:e}}catch(t){return{error:{...A("Error fetching Banner Notification widget from Sanity for Phrase context",t),id:e,operation:r,processed:"bannerNotificationWidget"}}}}async function r4(e,r){let t;try{if(!(t=await m({name:x.i5o,description:"Translations for Banner Notification widget",keys:(0,x.cEj)(e),phraseJob:e.phraseJob})))return{error:{...A("Did not get a valid phraseJob when calling apiJobsCreate"),id:e._id,operation:r,processed:"bannerNotificationWidget"}}}catch(t){return{error:{...A("Error creating job in phrase",t),id:e._id,operation:r,processed:"bannerNotificationWidget"}}}if(!e.phraseJob)try{return await (0,x.DMw)(e,t),{phraseJob:t,pushedBackToSanity:!0}}catch(t){return{error:{...A("Error adding phrase job id back in the sanity Banner Notification widget",t),id:e._id,operation:r,processed:"bannerNotificationWidget"}}}return{phraseJob:t,pushedBackToSanity:!1}}async function r6(e,r){return H({id:e._id,namespace:x.i5o,keys:(0,x.cEj)(e),phraseJob:e.phraseJob,operation:r,entity:"bannerNotificationWidget"})}async function r7(e){let r=q({ids:e,operation:"create",entity:"bannerNotificationWidget"});if("error"in r)return r.error;let{sanityId:t}=r,n=await r2(t,"create");if("error"in n)return n.error;let a=await r6(n.doc,"create");if("error"in a)return a.error;let o=await r4(n.doc,"create");if("error"in o)return o.error;let{phraseJob:i,pushedBackToSanity:c}=o;return{hasError:!1,message:"Phrase process for recent created sanity Banner Notification widget has finished correctly, phraseJob: ".concat(i,", pushed back to Sanity: ").concat(c),id:t,operation:"create",processed:"bannerNotificationWidget"}}async function te(e){let r=q({ids:e,operation:"delete",entity:"bannerNotificationWidget"});if("error"in r)return r.error;let{sanityId:t}=r,n=await B({id:t,name:t,operation:"delete",entity:"bannerNotificationWidget"});if("error"in n)return n.error;let a=await M({id:t,namespace:t,operation:"delete",entity:"bannerNotificationWidget"});return"error"in a?a.error:{hasError:!1,message:"Delete keys and job associated to Sanity Banner Notification succeeded",id:t,operation:"delete",processed:"bannerNotificationWidget"}}async function tr(e){let r=q({ids:e,operation:"update",entity:"bannerNotificationWidget"});if("error"in r)return r.error;let{sanityId:t}=r,n=await r2(t,"update");if("error"in n)return n.error;let a=await r6(n.doc,"update");if("error"in a)return a.error;let o=await r4(n.doc,"update");if("error"in o)return o.error;let{phraseJob:i,pushedBackToSanity:c}=o;return{hasError:!1,message:"Phrase process for recent update sanity Banner Notification widget has finished correctly, phraseJob: ".concat(i,", ").concat(c?"pushed back to Sanity: ".concat(c):"job id already present in sanity doc"),id:t,operation:"create",processed:"bannerNotificationWidget"}}async function tt(e,r){try{let e=await (0,x.HvU)(x.nJO.SYSTEM);return(0,L.I)(e,"DLT Redirect Drawer document not found in Sanity"),{doc:e}}catch(t){return{error:{...A("Error fetching DLT Redirect Drawer widget from Sanity for Phrase context",t),id:e,operation:r,processed:"dltRedirectDrawerWidget"}}}}async function tn(e,r){let t;try{if(!(t=await m({name:x.HY0,description:"Translations for DLT Redirect Drawer widget",keys:(0,x.xw1)(e),phraseJob:e.phraseJob})))return{error:{...A("Did not get a valid phraseJob when calling apiJobsCreate"),id:e._id,operation:r,processed:"dltRedirectDrawerWidget"}}}catch(t){return{error:{...A("Error creating job in phrase",t),id:e._id,operation:r,processed:"dltRedirectDrawerWidget"}}}if(!e.phraseJob)try{return await (0,x.DMw)(e,t),{phraseJob:t,pushedBackToSanity:!0}}catch(t){return{error:{...A("Error adding phrase job id back in the sanity DLT Redirect Drawer widget",t),id:e._id,operation:r,processed:"dltRedirectDrawerWidget"}}}return{phraseJob:t,pushedBackToSanity:!1}}async function ta(e,r){return H({id:e._id,namespace:x.HY0,keys:(0,x.xw1)(e),phraseJob:e.phraseJob,operation:r,entity:"dltRedirectDrawerWidget"})}async function to(e){let r=q({ids:e,operation:"create",entity:"dltRedirectDrawerWidget"});if("error"in r)return r.error;let{sanityId:t}=r,n=await tt(t,"create");if("error"in n)return n.error;let a=await ta(n.doc,"create");if("error"in a)return a.error;let o=await tn(n.doc,"create");if("error"in o)return o.error;let{phraseJob:i,pushedBackToSanity:c}=o;return{hasError:!1,message:"Phrase process for recent created sanity DLT Redirect Drawer widget has finished correctly, phraseJob: ".concat(i,", pushed back to Sanity: ").concat(c),id:t,operation:"create",processed:"dltRedirectDrawerWidget"}}async function ti(e){let r=q({ids:e,operation:"delete",entity:"dltRedirectDrawerWidget"});if("error"in r)return r.error;let{sanityId:t}=r,n=await B({id:t,name:t,operation:"delete",entity:"dltRedirectDrawerWidget"});if("error"in n)return n.error;let a=await M({id:t,namespace:t,operation:"delete",entity:"dltRedirectDrawerWidget"});return"error"in a?a.error:{hasError:!1,message:"Delete keys and job associated to Sanity DLT Redirect Drawer succeeded",id:t,operation:"delete",processed:"dltRedirectDrawerWidget"}}async function tc(e){let r=q({ids:e,operation:"update",entity:"dltRedirectDrawerWidget"});if("error"in r)return r.error;let{sanityId:t}=r,n=await tt(t,"update");if("error"in n)return n.error;let a=await ta(n.doc,"update");if("error"in a)return a.error;let o=await tn(n.doc,"update");if("error"in o)return o.error;let{phraseJob:i,pushedBackToSanity:c}=o;return{hasError:!1,message:"Phrase process for recent update sanity DLT Redirect Drawer widget has finished correctly, phraseJob: ".concat(i,", ").concat(c?"pushed back to Sanity: ".concat(c):"job id already present in sanity doc"),id:t,operation:"create",processed:"dltRedirectDrawerWidget"}}async function ts(e,r){try{let{response:e}=await (0,x.Bwd)({queryMode:x.nJO.SYSTEM});return(0,L.I)(e[0],"My Activities page document not found in Sanity"),{doc:e[0]}}catch(t){return{error:{...A("Error fetching My Activities page from Sanity for Phrase context",t),id:e,operation:r,processed:"myActivities"}}}}async function td(e,r){let t;try{if(!(t=await m({name:x.k3S,description:"Translations for My activities page: /hc/".concat(o.Nq,"/my-activities"),keys:(0,x.q9E)(e),phraseJob:e.phraseJob})))return{error:{...A("Did not get a valid phraseJob when calling apiJobsCreate"),id:e._id,operation:r,processed:"myActivities"}}}catch(t){return{error:{...A("Error creating job in phrase",t),id:e._id,operation:r,processed:"myActivities"}}}if(!e.phraseJob)try{return await (0,x.DMw)(e,t),{phraseJob:t,pushedBackToSanity:!0}}catch(t){return{error:{...A("Error adding phrase job id back in the sanity homepage",t),id:e._id,operation:r,processed:"myActivities"}}}return{phraseJob:t,pushedBackToSanity:!1}}async function tu(e,r){return H({id:e._id,namespace:x.k3S,keys:(0,x.q9E)(e),phraseJob:e.phraseJob,operation:r,entity:"myActivities"})}async function tp(e){let r=q({ids:e,operation:"create",entity:"myActivities"});if("error"in r)return r.error;let{sanityId:t}=r,n=await ts(t,"create");if("error"in n)return n.error;let a=await tu(n.doc,"create");if("error"in a)return a.error;let o=await td(n.doc,"create");if("error"in o)return o.error;let{phraseJob:i,pushedBackToSanity:c}=o;return{hasError:!1,message:"Phrase process for recent created sanity 'My Activities' page has finished correctly, phraseJob: ".concat(i,", pushed back to Sanity: ").concat(c),id:t,operation:"create",processed:"myActivities"}}async function tl(e){let r=q({ids:e,operation:"delete",entity:"myActivities"});if("error"in r)return r.error;let{sanityId:t}=r,n=await B({id:t,name:t,operation:"delete",entity:"myActivities"});if("error"in n)return n.error;let a=await M({id:t,namespace:t,operation:"delete",entity:"myActivities"});return"error"in a?a.error:{hasError:!1,message:"Delete keys and job associated to Sanity My Activities page succeeded",id:t,operation:"delete",processed:"myActivities"}}async function tf(e){let r=q({ids:e,operation:"update",entity:"myActivities"});if("error"in r)return r.error;let{sanityId:t}=r,n=await ts(t,"update");if("error"in n)return n.error;let a=await tu(n.doc,"update");if("error"in a)return a.error;let o=await td(n.doc,"update");if("error"in o)return o.error;let{phraseJob:i,pushedBackToSanity:c}=o;return{hasError:!1,message:"Phrase process for recent update sanity 'My Activities' page has finished correctly, phraseJob: ".concat(i,", ").concat(c?"pushed back to Sanity: ".concat(c):"job id already present in sanity doc"),id:t,operation:"update",processed:"myActivities"}}async function th(e,r){try{let r=e.split("-")[1],{response:t}=await (0,x.ZgB)({formId:r,queryMode:x.nJO.SYSTEM});return(0,L.I)(t[0],"Webform document not found in Sanity"),{doc:t[0]}}catch(t){return{error:{...A("Error fetching Webform from Sanity for Phrase context",t),id:e,operation:r,processed:"webform"}}}}async function ty(e,r){let t;try{if(!(t=await m({name:(0,x.S1E)(e._id),description:"Translations for: /hc/".concat(o.Nq,"/forms/").concat(e.id),keys:(0,x.rVc)(e),phraseJob:e.phraseJob})))return{error:{...A("Did not get a valid phraseJob when calling apiJobsCreate"),id:e._id,operation:r,processed:"webform"}}}catch(t){return{error:{...A("Error creating job in phrase",t),id:e._id,operation:r,processed:"webform"}}}if(!e.phraseJob)try{return await (0,x.DMw)(e,t),{phraseJob:t,pushedBackToSanity:!0}}catch(t){return{error:{...A("Error adding phrase job id back in the sanity webform",t),id:e._id,operation:r,processed:"webform"}}}return{phraseJob:t,pushedBackToSanity:!1}}async function tg(e,r){return H({id:e._id,namespace:(0,x.S1E)(e._id),keys:(0,x.rVc)(e),phraseJob:e.phraseJob,operation:r,entity:"webform"})}async function tb(e){let r=q({ids:e,operation:"create",entity:"webform"});if("error"in r)return r.error;let{sanityId:t}=r,n=await th(t,"create");if("error"in n)return n.error;if(!n.doc)return{hasError:!1,message:"Recent created webform is not suitable for being sent to Phrase, probably because is not visible yet.",id:t,operation:"create",processed:"webform"};let a=await tg(n.doc,"create");if("error"in a)return a.error;let o=await ty(n.doc,"create");if("error"in o)return o.error;let{phraseJob:i,pushedBackToSanity:c}=o;return{hasError:!1,message:"Phrase process for recent created sanity webform has finished correctly, phraseJob: ".concat(i,", pushed back to Sanity: ").concat(c),id:t,operation:"create",processed:"webform"}}async function tm(e){let r=q({ids:e,operation:"update",entity:"webform"});if("error"in r)return r.error;let{sanityId:t}=r,n=await th(t,"update");if("error"in n)return n.error;if(!n.doc)return{hasError:!1,message:"Recent created webform is not suitable for being sent to Phrase, probably because is not visible yet.",id:t,operation:"update",processed:"webform"};let a=await tg(n.doc,"update");if("error"in a)return a.error;let o=await ty(n.doc,"update");if("error"in o)return o.error;let{phraseJob:i,pushedBackToSanity:c}=o;return{hasError:!1,message:"Phrase process for recent update sanity webform has finished correctly, phraseJob: ".concat(i,", ").concat(c?"pushed back to Sanity: ".concat(c):"job id already present in sanity doc"),id:t,operation:"update",processed:"webform"}}async function tw(e){let r=q({ids:e,operation:"delete",entity:"webform"});if("error"in r)return r.error;let{sanityId:t}=r,n=await B({id:t,name:t,operation:"delete",entity:"webform"});if("error"in n)return n.error;let a=await M({id:t,namespace:t,operation:"delete",entity:"webform"});return"error"in a?a.error:{hasError:!1,message:"Delete keys and job associated to Sanity webform succeeded",id:t,operation:"delete",processed:"webform"}}async function tS(e,r){try{return{doc:(0,L.I)(await (0,x.PEi)(x.nJO.SYSTEM,!1),"App Config Items document not found in Sanity").response}}catch(t){return{error:{...A("Error fetching app config items from Sanity for Phrase context",t),id:e,operation:r,processed:"appConfigItems"}}}}async function tk(e,r){let t;let n=e.config[0]._id;try{if(!(t=await m({name:x.bT9,description:"Translations for items defined under Enabled Locales and Elastic Search",keys:(0,x.Pup)(e),phraseJob:e.phraseJob})))return{error:{...A("Did not get a valid phraseJob when calling apiJobsCreate"),id:n,operation:r,processed:"appConfigItems"}}}catch(e){return{error:{...A("Error creating job in phrase",e),id:n,operation:r,processed:"appConfigItems"}}}if(!e.phraseJob)try{return await (0,x.DMw)({...e.config[0],phraseJob:t},t),{phraseJob:t,pushedBackToSanity:!0}}catch(e){return{error:{...A("Error adding phrase job id back in the sanity App Configuration",e),id:n,operation:r,processed:"appConfigItems"}}}return{phraseJob:t,pushedBackToSanity:!1}}async function tE(e,r){let t=e.config[0]._id;return H({id:t,namespace:x.bT9,additionalTags:[t],keys:(0,x.Pup)(e),phraseJob:e.phraseJob,operation:r,entity:"appConfigItems"})}async function tJ(e){let r=q({ids:e,operation:"create",entity:"appConfigItems"});if("error"in r)return r.error;let{sanityId:t}=r,n=await tS(t,"create");if("error"in n)return n.error;let a=await tE(n.doc,"create");if("error"in a)return a.error;let o=await tk(n.doc,"create");if("error"in o)return o.error;let{phraseJob:i,pushedBackToSanity:c}=o;return{hasError:!1,message:"Phrase process for sanity app configuration for enabled locales and search has finished correctly, phraseJob: ".concat(i,", pushed back to Sanity: ").concat(c),id:t,operation:"create",processed:"appConfigItems"}}async function tv(e){let r=q({ids:e,operation:"delete",entity:"appConfigItems"});if("error"in r)return r.error;let{sanityId:t}=r,n=await B({id:t,name:t,operation:"delete",entity:"appConfigItems"});if("error"in n)return n.error;let a=await M({id:t,namespace:t,operation:"delete",entity:"appConfigItems"});return"error"in a?a.error:{hasError:!1,message:"Delete keys and job associated to Sanity appConfigItems succeeded",id:t,operation:"delete",processed:"appConfigItems"}}async function t_(e){let r=q({ids:e,operation:"update",entity:"appConfigItems"});if("error"in r)return r.error;let{sanityId:t}=r,n=await tS(t,"update");if("error"in n)return n.error;let a=await tE(n.doc,"update");if("error"in a)return a.error;let o=await tk(n.doc,"update");if("error"in o)return o.error;let{phraseJob:i,pushedBackToSanity:c}=o;return{hasError:!1,message:"Phrase process for sanity app configuration for enabled locales and search has finished correctly, phraseJob: ".concat(i,", ").concat(c?"pushed back to Sanity: ".concat(c):"job id already present in sanity doc"),id:t,operation:"update",processed:"appConfigItems"}}(0,J.r)(function(){return{name:"phrase",update:rR,create:rN,delete:rx}}),(0,J.r)(function(){return{name:"phrase",update:rF,create:rO,delete:rU}}),(0,J.r)(function(){return{name:"phrase",update:rK,create:rY,delete:rz}}),(0,J.r)(function(){return{name:"phrase",update:rQ,create:rG,delete:rX}}),(0,J.r)(function(){return{name:"phrase",update:r8,create:r9,delete:r5}}),(0,J.r)(function(){return{name:"phrase",update:tr,create:r7,delete:te}}),(0,J.r)(function(){return{name:"phrase",update:tc,create:to,delete:ti}}),(0,J.r)(function(){return{name:"phrase",update:tf,create:tp,delete:tl}}),(0,J.r)(function(){return{name:"phrase",create:tb,update:tm,delete:tw}}),(0,J.r)(function(){return{name:"phrase",update:t_,create:tJ,delete:tv}})}}]);
//# sourceMappingURL=7815-2a63f5ae79c0b2bc.js.map